"""
Django settings for vis_auth project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+)3jm(^8t1dv@gtqe*h@fv*5!9lo=c19agfy=h4dyf81h6&!pv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.admin',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'my_auth',
    'rest_framework_simplejwt',  # Предполагается, что ваше приложение называется 'auth'
]

SIMPLE_JWT = {
    # Время жизни токена доступа (access token) в минутах (например, 15 минут)
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),

    # Время жизни обновляющего токена (refresh token) в днях (например, 30 дней)
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),

    # Включение возможности обновления токена доступа через обновляющий токен
    'ROTATE_REFRESH_TOKENS': True,

    # Опция, позволяющая передавать обновляющий токен в заголовке запроса (по умолчанию в cookies)
    'UPDATE_LAST_LOGIN': True,

    # Настройка алгоритма для создания подписи токенов (по умолчанию HS256)
    'ALGORITHM': 'HS256',

    # Указание ключа для подписи токенов (замените на свой секретный ключ)
    'SIGNING_KEY': 'your-secret-key',

    # Включение аутентификации пользователя через обновляющий токен (если необходимо)
    'AUTH_HEADER_TYPES': ('Bearer',),

    # Включение автоматической перезагрузки токена доступа при обновлении
    'AUTH_TOKEN_CLASSES': (
        'rest_framework_simplejwt.tokens.AccessToken',
    ),
}
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:8000",
    "http://localhost:8000",
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',  # Добавлен middleware для обработки JSON
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vis_auth.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'builtins': [
                'rest_framework.templatetags.rest_framework',
            ],
        },
    },
]

WSGI_APPLICATION = 'vis_auth.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'django-project',  # Замените 'имя_вашей_базы_данных' на фактическое имя вашей базы данных
        'USER': 'postgres',  # Замените 'ваше_имя_пользователя_базы_данных' на фактическое имя вашего пользователя базы данных
        'PASSWORD': '1234',  # Замените 'ваш_пароль_базы_данных' на фактический пароль вашей базы данных
        'HOST': 'localhost',  # Вы можете изменить хост, если ваш сервер PostgreSQL размещен в другом месте
        'PORT': '5432',  # Порт PostgreSQL по умолчанию - 5432
    }
}
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
